package nl.qweenink.adventofcode2023

import org.junit.jupiter.api.Test

class Day16 {

    private var matrix2 = arrayOf<Array<Char>>()
    private var previousPositions = mutableListOf<Pair<Pair<Int, Int>,Direction>>()

    @Test
    fun puzzle1() {
        val matrix = data.lines().map { line ->
            line.toCharArray().toTypedArray()
        }.toTypedArray()

        matrix2 = data.lines().map { line ->
            line.toCharArray().toTypedArray()
        }.toTypedArray()

        recursiveBeam(matrix, Pair(0, 0), Direction.RIGHT)

        var sum = 0
        matrix2.forEach { line ->
            line.forEach { if(it == '#') sum++ }
        }
        println(sum)
    }

    private fun recursiveBeam(matrix: Array<Array<Char>>, pos: Pair<Int, Int>, direction: Direction) {
        if(pos.first < 0 || pos.first >= matrix.size || pos.second < 0 || pos.second >= matrix[0].size) return
        if(previousPositions.contains(Pair(pos, direction))) return
        previousPositions.add(Pair(pos, direction))
        matrix2[pos.first][pos.second] = '#'
        val currentChar = matrix[pos.first][pos.second]
        when(currentChar) {
            '.' -> {
                recursiveBeam(matrix, applyDirection(pos, direction), direction)
            }
            '|' -> {
                if (direction == Direction.LEFT || direction == Direction.RIGHT) {
                    recursiveBeam(matrix, applyDirection(pos, Direction.UP), Direction.UP)
                    recursiveBeam(matrix, applyDirection(pos, Direction.DOWN), Direction.DOWN)
                } else {
                    recursiveBeam(matrix, applyDirection(pos, direction), direction)
                }
            }
            '-' -> {
                if (direction == Direction.UP || direction == Direction.DOWN) {
                    recursiveBeam(matrix, applyDirection(pos, Direction.LEFT), Direction.LEFT)
                    recursiveBeam(matrix, applyDirection(pos, Direction.RIGHT), Direction.RIGHT)
                } else {
                    recursiveBeam(matrix, applyDirection(pos, direction), direction)
                }
            }
            '/' -> {
                when (direction) {
                    Direction.UP -> recursiveBeam(matrix, applyDirection(pos, Direction.RIGHT), Direction.RIGHT)
                    Direction.DOWN -> recursiveBeam(matrix, applyDirection(pos, Direction.LEFT), Direction.LEFT)
                    Direction.LEFT -> recursiveBeam(matrix, applyDirection(pos, Direction.DOWN), Direction.DOWN)
                    Direction.RIGHT -> recursiveBeam(matrix, applyDirection(pos, Direction.UP), Direction.UP)
                }
            }
            '\\' -> {
                when (direction) {
                    Direction.UP -> recursiveBeam(matrix, applyDirection(pos, Direction.LEFT), Direction.LEFT)
                    Direction.DOWN -> recursiveBeam(matrix, applyDirection(pos, Direction.RIGHT), Direction.RIGHT)
                    Direction.LEFT -> recursiveBeam(matrix, applyDirection(pos, Direction.UP), Direction.UP)
                    Direction.RIGHT -> recursiveBeam(matrix, applyDirection(pos, Direction.DOWN), Direction.DOWN)
                }
            }
        }
    }

    private fun applyDirection(current: Pair<Int, Int>, direction: Direction): Pair<Int, Int> {
        return when(direction) {
            Direction.RIGHT -> Pair(current.first, current.second + 1)
            Direction.LEFT -> Pair(current.first, current.second - 1)
            Direction.UP -> Pair(current.first - 1, current.second)
            Direction.DOWN -> Pair(current.first + 1, current.second)
        }
    }

    @Test
    fun puzzle2() {
        val matrix = data.lines().map { line ->
            line.toCharArray().toTypedArray()
        }.toTypedArray()

        var max = 0
        (matrix.indices).forEach { index ->
            matrix2 = data.lines().map { line ->
                line.toCharArray().toTypedArray()
            }.toTypedArray()
            previousPositions = mutableListOf()
            recursiveBeam(matrix, Pair(index, 0), Direction.RIGHT)

            var sum = 0
            matrix2.forEach { line ->
                line.forEach { if (it == '#') sum++ }
            }
            if(sum > max) {
                max = sum
            }
        }
        (matrix.indices).forEach { index ->
            matrix2 = data.lines().map { line ->
                line.toCharArray().toTypedArray()
            }.toTypedArray()
            previousPositions = mutableListOf()
            recursiveBeam(matrix, Pair(index, matrix[0].size-1), Direction.LEFT)

            var sum = 0
            matrix2.forEach { line ->
                line.forEach { if (it == '#') sum++ }
            }
            if(sum > max) {
                max = sum
            }
        }
        (matrix[0].indices).forEach { index ->
            matrix2 = data.lines().map { line ->
                line.toCharArray().toTypedArray()
            }.toTypedArray()
            previousPositions = mutableListOf()
            recursiveBeam(matrix, Pair(0, index), Direction.DOWN)

            var sum = 0
            matrix2.forEach { line ->
                line.forEach { if (it == '#') sum++ }
            }
            if(sum > max) {
                max = sum
            }
        }
        (matrix[0].indices).forEach { index ->
            matrix2 = data.lines().map { line ->
                line.toCharArray().toTypedArray()
            }.toTypedArray()
            previousPositions = mutableListOf()
            recursiveBeam(matrix, Pair(matrix.size-1, index), Direction.UP)

            var sum = 0
            matrix2.forEach { line ->
                line.forEach { if (it == '#') sum++ }
            }
            if(sum > max) {
                max = sum
            }
        }
        println(max)
    }

    enum class Direction {
        UP, DOWN, LEFT, RIGHT
    }

    val data2 = """.|...\....
|.-.\.....
.....|-...
........|.
..........
.........\
..../.\\..
.-.-/..|..
.|....-|.\
..//.|...."""

    val data = """\.......................|..-.............../../.......|...............\.\.....|..../.............|............
........................../....../..............................-............-.-..--.........-...........\/...
....\............../...........-...-......|.............................\...............-........-....|.......
......\....|................./.\................/..................../.......................|..\......-......
.................../..................-./.................../.....-...................|......\.......|\...\./.
.....|........../....................\../..\.../.\.......-.............\...........\......|.\..-..........-...
..../............/.....\...................../..--\........|......\....-...|.-...../......-........../........
..............\.-............./........./....|\.......\..........|.................|.|.................-......
.....|..........-................-.../..........-........................\.......|.........................-..
.|.-......./....................\........-.............../..\.|.-\...........\./.................-............
................|/............................../..-.\..................-..../../...../.../..../..........|...
........................./.....................\..\....-....../-.....................\|.........././.-........
...\.....................-...../|............--......-..|...../.....|......|.../.\....|.............\|.......\
.........-...-.....|.........../...-/........|......./|............-.......-.....\.............\|....../......
.....|...|.................|...../.............|.................../..........\|..\......|..|....-............
...........................-.........\......\.............\...................-.....-.\.......-.....|.........
.................-.............-......./.............-..\./......|....-..-..........-....-............\.......
.\..\.......-......|........................\.............-.......................|.........|\.|..\......--/..
..........-.....||--........|........-....../...........|../...-.........../.....-.\..........|.......-.......
..........\..........|..................\.................-..../............/..........|.......-........../...
..--......../..........-..|........./.........-...../........-.................|..\............../.....-......
.....\.............|...../......../............./||..........................\............|...................
..-.................-|..-....................\.................|...\.....\............./......-.......\.......
............-../......\...../.-....-.....-....-./../......\..|..|............................|.../..|.........
-................./................................................|...............|....|.....-.....|....../..
...........-...................|...........\.......-..\.......-...........|..-....../........|...............|
.........|...|-........../...-..........|.........\.....||......./....|...............\......-......\...../...
....|.........|............\.-.......................................-.......................|.-..|.\...\.-...
.|....|....-/....................\\..........................|........\|...|..............\..|......-.\../....
..|.\......|..../.....|.......-....................|.\..\............/......................|.....\../../.....
.......|\\.\/......................./.............|................../.........|.....\-.......................
......................................../.../................\-..............-................./......\.......
............../............/\......./........................./......|............\/..........................
......./................|......../.........-............\.../.|....../....|...../..../......../...............
...................|............-\........../...\.......\....\.....-.........-./....|.........................
.....-..-\.................|\...........................|..........\........-...|.............................
..............................-.............-.......\......................../.......\|.......|...-....-......
\...................\..../.................\................|......-...-............./.-......................
........................./.|./...|..\.-............|.-.....-..........\....-..../.....|.......|...............
.................../......../..................|.|...............|.......|\.....|......|...............\/..|..
.........|....-......../........-./..|.../..|./...................-........|..................................
..|../............-......-.........................-..|....-................-..\....../...........|...........
....................-...............|.../.....|..../......../...|.......\.....-.....\..............-..\.-.....
...........\.........../............................................\......-................-.......|.....-...
..-............./.......-\...........|-..-../............../................................../...............
.................\.......\............../.|.......-...\............................................\.-........
.\....|....\......|........./.....--......................................|................\..|-..............
......../...............-..........................|...........................-.............-\.-..|..........
.......|......|/...\........./......../.....\.........\.......................-...........\..\................
.-..-../.............|................./../.................\........-......|.\.....||...................\|...
/......../....\.....|-..........\..............-.....|............/\......\...//....................\...-/....
................-...........-.-\-..........\.-./......../-................./../.\........................./...
-.........-.....|.....-..|..|.........|...................-..........\/.-.....................................
......./...../......\............-.|...............|..../.........|....\.................../..............|...
...........|.......|....|...............\........................\/..\......................................\.
......\........-.........................\..........\.............\......................\/.....\..|..........
......\...........|.........../..-............./........................../...-......../...............\..|...
..|............\../........../............\...|.......................-...............\-../.|...|\.....\......
.|....\.|....-|.........\......./.................../.|........|....../.--.\.....\..............-\\.........-.
......................./.......\...........|.\............-.....\.............\.........--......../.\..-.|../.
......../.............../......\.\....|.............../...........................-........-......../.........
.......|\.............|.../|/........../....\.....-....|.............-......./........\..\........\..|......-.
.............../...........-.....\..\....-...../...|......\...........................\...|...........|/......
.............|....../.................../..|.....................|.......|....//..............\...............
......./....\............................-.........................-/......../|......-....|.............../...
...........................|...................\...............................-.................|...........\
.............................-......./..../...................\.../...........-.|......................||.....
\....\....\...-./......../.........\................./................\...................|...........-.......
................-.../............/\..................\.\..-....../................./..........|...............
......../...\.......................\.......\..\......|.....|../..........\..........-.............|..........
../.........................................-\..........-.........|-./.....-...|..|.......\........-...../../.
.....|..........-......../|-..............|.................-...........|...\.....................\...........
.......|..............\....\.....-............../..\\..\.......-........./.........-..|...|................../
..........-.......-.-................../.........\\...../.....|..........\......./.|.............-...........\
..................................-..................|...........\../\...../..../...\................/........
...-.........................................................\.|..............\..................\............
-.|..|...................../../.|.......\.....|.....\.\...\.........-.................................../.....
...\./....../........\.......-.................\.........|............-.........../...........\.|.........|.\.
..........-...\.............-.-............-.-................/.....................|........|............-...
|......./............/..|..............\...............|.......|\................/....|.........|.........\..\
.....\../\./.....................-.............\..................|.|.........................................
............/......../.../.......\............/.........................\........................\............
....../..|.............../....................-.......\................................................|.....\
................................../.......././.......\.....|.\......-.........-..||......../........-.//......
........................\.......|............-....-...../..............................-............-....|...-
.....-.......|......\..|.........-....|......\......../..../.......\..........|....\.............||..\........
..........|...........-|.......\.......-....../...../..........||.......................\............-..|.....
.................../../..............................|....|................/........|-....|................/..
.....................\................/............................/-........./...|.............\...|..|\.....
.....\..\..........\......../......|.........-....-..-..|...........\....|./....\.\..\............../.........
.......-...............-....../...........-.......................|../...............|...|.........../..../...
.............|.../..................\..\..........-........||................\/...........-|..................
.............-..............-\.../.................|......\...../..........\...-.....-....../................\
.....-....................................-.........\/............../.............................|...........
./.|../......\\..........................................|..............\|/..-\..........................\....
...........-.........\............./....-........-....-....-.........\..\....-\...-...............--.........-
..\.............................\............................./\..........-.............-...-./........../....
.................../........\....|..-....|||./..............-......-./....................../..|...|..........
......\.........../............|\...|.-................../....................|\..|..\.............-./......|.
...........-...................-.|........................\...............|/..-...\...|/\...........|.........
............|..../..................................\.......................\........................-........
.\..........................|......|......../.|....................../.......\......\.............../.........
..........-.../............/..........................|....-......................|.-................|.-......
......../............-...|.....|......../-.....-|...|./.......-..................-\...........................
...............\.\/.-....././................-.../..../.............../-|.....-.......|......./..--...........
..........-\\.|-................./../..|.-.....--................../.................../.|.......-............
..\.................-..............-...............\.....|......................./..\.....--........./..../..\
.......-....../..............|..................\....|..|..........-.....|.|.-.........................\......
..../..\...\....................................||.|......................................|.......\/.........-
................\-.-.....||....\.........................-...................................................|"""
}
